swagger: "2.0"
info:
  title: "Key Keeper API"
  description: "
  This is a password reminder web service that helps users to maintain good password security practices. It allows users to set reminders for changing their passwords at regular intervals and keep track of the different websites where they have login credentials.
  With this service, users can receive reminder updates about their passwords for specific websites, which can help to increase their password security. For example, users can receive reminders to change their passwords every 90 days or whenever there is a data breach at a website where they have an account.
  The aim is to reduce the risk of security breaches due to weak or compromised passwords."
  version: "1.0.0"
host: "https://keykeeper.onrender.com"
basePath: "/v1"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /reminders:
    get:
      summary: "Get all reminders"
      responses:
        200:
          description: "OK"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Reminder"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
    post:
      summary: "Create a new reminder"
      parameters:
        - name: "reminder"
          in: "body"
          description: "Reminder object"
          required: true
          schema:
            $ref: "#/definitions/Reminder"
      responses:
        201: 
          description: "Created"
          schema:
            $ref: "#/definitions/Reminder"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /reminders/{id}:
    get:
      summary: "Get a reminder by ID"
      parameters:
        - name: "id"
          in: "path"
          description: "Reminder ID"
          required: true
          type: "integer"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Reminder"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
    delete:
      summary: "Delete a reminder by ID"
      parameters:
        - name: "id"
          in: "path"
          description: "Reminder ID"
          required: true
          type: "integer"
      responses:
        204:
          description: "No content"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /reminders/{id}/interval:
    patch:
      summary: "Update a reminder's interval"
      parameters:
        - name: "interval"
          in: "body"
          description: "Interval object"
          required: true
          schema:
            $ref: "#/definitions/Interval"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Reminder"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /reminders/{id}/updated-at:
    patch:
      summary: "Update a reminder's updated_at"
      parameters:
        - name: "updatedAt"
          in: "body"
          description: "UpdatedAt object"
          required: true
          schema:
            $ref: "#/definitions/UpdatedAt"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Reminder"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /reminders/{id}/extension:
    patch:
      summary: "Update a reminder's extension"
      parameters:
        - name: "extension"
          in: "body"
          description: "Key/value object"
          required: true
          schema:
            type: object
            additionalProperties: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Reminder"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /users:
    post:
      summary: "Create a new user"
      parameters:
        - name: "user"
          in: "body"
          description: "CreateUser object"
          required: true
          schema:
            $ref: "#/definitions/CreateUser"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    get:
      summary: "Get a user by ID"
      parameters:
        - name: "id"
          in: "path"
          description: "User's ID"
          required: true
          type: "integer"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /users/{id}/deactivate:
    patch:
      summary: "Deactivate a user"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the user to deactivate"
          required: true
          type: "integer"
        - name: "credentials"
          in: "body"
          description: "Email address and password of the user to authenticate"
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /users/{id}/reset-password:
    post:
      summary: "Reset a user's password"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the user to reset password"
          required: true
          type: "integer"
        - name: "email"
          in: "body"
          description: "Email address to send reset token"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                format: "email"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}/change-password:
    patch:
      summary: "Update a user's password"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the user to update password"
          required: true
          type: "integer"
        - name: "password"
          in: "body"
          description: "User's new password to update"
          required: true
          schema:
            type: "object"
            properties:
              password:
                type: "string"
                format: password
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
  /auth/login:
    post:
      summary: "Login a user"
      parameters:
        - name: "credentials"
          in: "body"
          description: "Email address and password of the user to authenticate"
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /auth/logout:
    post:
      summary: "Logout a user"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
        - Bearer: []
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      full_name:
        type: "string"
      email:
        type: "string"
        format: email
      created_at:
        type: "string"
        format: date-time
      is_activated:
        type: boolean
  CreateUser:
    type: object
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: string
        format: email
      password:
        type: "string"
        format: password
        minLength: 8
        maxLength: 20
  Reminder:
    type: "object"
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
      website_url:
        type: "string"
      interval:
        type: "string"
        format: date-time
      updated_at:
        type: "string"
        format: date-time
      Extension:
        type: object
        additionalProperties: true
  Interval:
    type: "object"
    properties:
      interval:
        type: "string"
        format: date-time
  UpdatedAt:
    type: "object"
    properties:
      interval:
        type: "string"
        format: date-time
  ErrorResponse:
    type: "object"
    properties:
      error:
        type: "string"
      message:
        type: "string"
  Credentials:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
        format: password
      

